(load "colour.tin")

(fun {assert l r msg} "(assert l r msg)\nAssert that the left side is equal to the right, if it isn't print the msg" {
  if (== l r) 
    {#t}
    {do 
      (print (join "assertion \"" msg "\" failed " (show l) " != " (show r)))
      #f
    }
})

(fun {describe name & body} "run a test case" {
  do 
    (println name)
    (map eval body)
})

(fun {it name & body} "run a unit of a test case" {
  do 
    (print (join " " name))
    (if (last body) {print (with-colour 0 255 0 " ✓")} {print (with-colour 255 0 0 " ✗")})
    (println "")
})

; (fun {it name & body} "run a unit of a test case" {
;   do 
;     (print (join "  " name))
;     (map (\ {test} { do
;       (if (eval (eval body)) {print (with-colour 0 255 0 " ✓")} {print (with-colour 255 0 0 " ✗")})
;       (println "")
;     }) body)
;     nil
; })

(fun {to-eq r} "to equal" {r})

(fun {expect l r} "should l be r" { do
  (= {res} (== l r))
  (if res {res} { do
    (print (join "value " (show l) " does not equal " (show r)))
    res
  })
})
